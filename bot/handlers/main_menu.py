import logging
from aiogram import Router, types
from aiogram.filters.command import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove

from services.django_api import register_user_api,get_categories, create_category
from handlers.utils import date_choice_keyboard, time_choice_keyboard, categories_keyboard

logger = logging.getLogger(__name__)
router = Router()


@router.message(Command("start", "menu"))
@router.message(lambda message: message.text.lower() in ["–º–µ–Ω—é", "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"])
async def show_main_menu(message: types.Message, state: FSMContext):
    await state.clear()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    success = await register_user_api(message.from_user)
    
    if success:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        categories = await get_categories(user_id=message.from_user.id)
        
        # –ï—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º "–û–±—â–∏–µ"
        if not categories:
            await create_category(user_id=message.from_user.id, name="–û–±—â–∏–µ")
        
        await show_main_keyboard(message)
    else:
        await message.answer("–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", reply_markup=ReplyKeyboardRemove())

async def show_main_keyboard(message: types.Message):
    kb = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìã –ú–æ–∏ –∑–∞–¥–∞—á–∏"), KeyboardButton(text="‚ûï –ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞")],
            [KeyboardButton(text="üè∑ –¢–µ–≥–∏")],
            [KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞")]
        ], resize_keyboard=True
    )
    await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=kb)