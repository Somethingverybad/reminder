from aiogram import types
from aiogram.filters.command import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, InlineKeyboardButton, InlineKeyboardMarkup

from services.django_api import register_user_api, get_categories
from aiogram.utils.text_decorations import html_decoration as html
from states import Form
from handlers.utils import show_main_keyboard  # –í—ã–Ω–µ—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å—é–¥–∞
from handlers.simple_dialog import router


@router.message(Command("start", "menu"))
@router.message(lambda message: message.text.lower() in ["–º–µ–Ω—é", "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"])
async def show_main_menu(message: types.Message, state: FSMContext):
    await state.clear()
    success = await register_user_api(message.from_user)
    if success:
        await show_main_keyboard(message)
    else:
        await message.answer("–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", reply_markup=ReplyKeyboardRemove())



@router.message(lambda message: message.text == "üè∑ –¢–µ–≥–∏")
async def show_user_categories(message: types.Message):
    categories = await get_categories(user_id=message.from_user.id)
    if not categories:
        await message.answer("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ç–µ–≥–æ–≤.")
        return

    kb = InlineKeyboardMarkup(row_width=1)
    for cat in categories:
        kb.insert(InlineKeyboardButton(text=cat["name"], callback_data=f"edit_cat:{cat['id']}"))

    kb.add(InlineKeyboardButton(text="‚ûï –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–µ–≥", callback_data="create_cat"))
    await message.answer("–í–∞—à–∏ —Ç–µ–≥–∏:", reply_markup=kb)
